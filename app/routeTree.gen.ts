/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateRouteImport } from './routes/_private/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as PrivateIndexImport } from './routes/_private/index'
import { Route as PrivateTasksIndexImport } from './routes/_private/tasks/index'
import { Route as PrivateMembersIndexImport } from './routes/_private/members/index'
import { Route as AuthRegisterIndexImport } from './routes/_auth/register/index'
import { Route as AuthLoginIndexImport } from './routes/_auth/login/index'
import { Route as AuthRegisterOrganizationImport } from './routes/_auth/register/organization'

// Create/Update Routes

const PrivateRouteRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PrivateIndexRoute = PrivateIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivateTasksIndexRoute = PrivateTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivateMembersIndexRoute = PrivateMembersIndexImport.update({
  id: '/members/',
  path: '/members/',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterOrganizationRoute = AuthRegisterOrganizationImport.update({
  id: '/register/organization',
  path: '/register/organization',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRoute
    }
    '/_private/': {
      id: '/_private/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivateIndexImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_auth/register/organization': {
      id: '/_auth/register/organization'
      path: '/register/organization'
      fullPath: '/register/organization'
      preLoaderRoute: typeof AuthRegisterOrganizationImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/register/': {
      id: '/_auth/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_private/members/': {
      id: '/_private/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof PrivateMembersIndexImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/tasks/': {
      id: '/_private/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof PrivateTasksIndexImport
      parentRoute: typeof PrivateRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthRegisterOrganizationRoute: typeof AuthRegisterOrganizationRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthRegisterOrganizationRoute: AuthRegisterOrganizationRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface PrivateRouteRouteChildren {
  PrivateIndexRoute: typeof PrivateIndexRoute
  PrivateMembersIndexRoute: typeof PrivateMembersIndexRoute
  PrivateTasksIndexRoute: typeof PrivateTasksIndexRoute
}

const PrivateRouteRouteChildren: PrivateRouteRouteChildren = {
  PrivateIndexRoute: PrivateIndexRoute,
  PrivateMembersIndexRoute: PrivateMembersIndexRoute,
  PrivateTasksIndexRoute: PrivateTasksIndexRoute,
}

const PrivateRouteRouteWithChildren = PrivateRouteRoute._addFileChildren(
  PrivateRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PrivateRouteRouteWithChildren
  '/': typeof PrivateIndexRoute
  '/register/organization': typeof AuthRegisterOrganizationRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/members': typeof PrivateMembersIndexRoute
  '/tasks': typeof PrivateTasksIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteRouteWithChildren
  '/': typeof PrivateIndexRoute
  '/register/organization': typeof AuthRegisterOrganizationRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/members': typeof PrivateMembersIndexRoute
  '/tasks': typeof PrivateTasksIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_private': typeof PrivateRouteRouteWithChildren
  '/_private/': typeof PrivateIndexRoute
  '/_auth/register/organization': typeof AuthRegisterOrganizationRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/_auth/register/': typeof AuthRegisterIndexRoute
  '/_private/members/': typeof PrivateMembersIndexRoute
  '/_private/tasks/': typeof PrivateTasksIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/register/organization'
    | '/login'
    | '/register'
    | '/members'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/register/organization'
    | '/login'
    | '/register'
    | '/members'
    | '/tasks'
  id:
    | '__root__'
    | '/_auth'
    | '/_private'
    | '/_private/'
    | '/_auth/register/organization'
    | '/_auth/login/'
    | '/_auth/register/'
    | '/_private/members/'
    | '/_private/tasks/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  PrivateRouteRoute: typeof PrivateRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  PrivateRouteRoute: PrivateRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_private"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/register/organization",
        "/_auth/login/",
        "/_auth/register/"
      ]
    },
    "/_private": {
      "filePath": "_private/route.tsx",
      "children": [
        "/_private/",
        "/_private/members/",
        "/_private/tasks/"
      ]
    },
    "/_private/": {
      "filePath": "_private/index.tsx",
      "parent": "/_private"
    },
    "/_auth/register/organization": {
      "filePath": "_auth/register/organization.tsx",
      "parent": "/_auth"
    },
    "/_auth/login/": {
      "filePath": "_auth/login/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/register/": {
      "filePath": "_auth/register/index.tsx",
      "parent": "/_auth"
    },
    "/_private/members/": {
      "filePath": "_private/members/index.tsx",
      "parent": "/_private"
    },
    "/_private/tasks/": {
      "filePath": "_private/tasks/index.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
